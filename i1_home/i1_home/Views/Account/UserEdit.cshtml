@model i1.Models.RegisterModel

@{
    ViewBag.Title = "Update Details";
}

<h2>Update</h2>
<p>
    Use the form below to create a new account. 
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/location.js")" type="text/javascript"></script>*@
@*<script src="@Url.Content("~/Scripts/loc2.js")" type="text/javascript"></script>
<script language="javascript" src="https://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>*@
<script src="@Url.Content("~/Scripts/locDropDown.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {

        $('.form-group input:reset').click(function () {
            document.getElementById('signupform').reset();
        });

    });
</script>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signupform" }))
{
    @Html.ValidationSummary(true, "Account updation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>

            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ContactNumber)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ContactNumber)
                @Html.ValidationMessageFor(m => m.ContactNumber)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Address)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Address)
                @Html.ValidationMessageFor(m => m.Address)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ZipCode)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ZipCode)
                @Html.ValidationMessageFor(m => m.ZipCode)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Country)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.Country, Model.listcountries,new { @id = "Country", @name = "Country", @style = "width:100px;", @onchange = "javascript:GetState(this.value);" })
                @Html.ValidationMessageFor(m => m.Country)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.State)
            </div>
            <div class="editor-field">
                <select id="States" style="width:100px;" onchange="javascript:GetCity(this.value);">
                </select>
                @Html.ValidationMessageFor(m => m.State)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.City)
            </div>
            <div class="editor-field">
                <select id="Cities" name="Cities" style="width:100px;">
                </select>
                @Html.ValidationMessageFor(m => m.City)
            </div>

            <input type="text" id="Temp" name="Temp" style="display:none" />
            <input type="text" id="Temp2" name="Temp2" style="display:none" />

            <p>
                <input type="submit" value="Register" />
                <input type="reset" id="reset" value="Reset" />
            </p>
        </fieldset>
    </div>
}